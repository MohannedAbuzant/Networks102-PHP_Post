/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication1;

import java.awt.FileDialog;
import java.awt.Frame;
import java.awt.image.BufferedImage;
import java.net.*;
import java.io.*;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.imageio.ImageReader;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import static jdk.nashorn.internal.objects.NativeString.trim;
/**
 *
 * @author Dr. Raed Alqadi
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        addURLsToCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        Browse = new javax.swing.JButton();
        imageChooser = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("URL:");

        jLabel2.setText("UserName");

        jLabel3.setText("Password");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setText("Download");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton3.setText("Select URL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField4.setText("5");

        jButton4.setText("Login");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        Browse.setText("Browse");
        Browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BrowseActionPerformed(evt);
            }
        });

        imageChooser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Image" }));
        imageChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 562, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextField2))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(18, 18, 18)
                                .addComponent(jButton3)))
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(imageChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Browse, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))
                        .addGap(64, 64, 64))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton3)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imageChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Browse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    String[] strURLs = {
        "http://127.0.0.1:81/java.php",
        "http://127.0.0.1:81/upload.php",
         "http://127.0.0.1:81/Download.php",
        "http://localhost:8080/hello/Upload",
        "http://localhost:8080/hello/download",
        "http://localhost:8080/hello/response3.jsp",
        "http://localhost:8080/hello/response4.jsp",
        "http://localhost:8080/hello/responseServlet"
    };
    
    String Authorization = ""; 
    String type;
    void addURLsToCombo(){
        
        int i =0;
        this.jComboBox1.removeAllItems();
        for (i =0; i <strURLs.length; i++){
            this.jComboBox1.addItem(strURLs[i]);
        }
        this.jComboBox1.setSelectedIndex(0);
        String str = (String) this.jComboBox1.getSelectedItem();
        this.jTextField4.setText(str);
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        dataStr="";
        OutputStream os;
        InputStream is;
       JFileChooser choose = new JFileChooser();
       choose.setCurrentDirectory(new java.io.File("."));
       choose.setDialogTitle("select folder");
       choose.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
       choose.setAcceptAllFileFilterUsed(false);
    int returnVal = choose.showOpenDialog(null);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            
         addParameter("image","./pic/"+imageChooser.getSelectedItem().toString().trim());
         
            String urlStr = jTextField4.getText();
            try {
                URL myURL = new URL(urlStr);
                URLConnection myConn = myURL.openConnection();
                myConn.setDoOutput(true);
                myConn.setDoInput(true);
                myConn.setRequestProperty("Content-Type", contentStr);
                myConn.setUseCaches(false);
                //dataStr = "T1=67&T2=88";
                
                BufferedOutputStream out = new BufferedOutputStream(myConn.getOutputStream());
                out.write(dataStr.getBytes());//"ACTION=add&NUMPTS=2&DATA=L0001\nL0002");
                out.close();
                 is = myConn.getInputStream();
                os= new FileOutputStream(choose.getSelectedFile().getAbsolutePath()+"/"+imageChooser.getSelectedItem().toString().trim());
                System.out.println(choose.getSelectedFile().getAbsolutePath()+"/"+imageChooser.getSelectedItem().toString().trim());
                String mm = "";              
                 byte[] b = new byte[2048];
                int length;
                         
                String t = "";

               
                 while ((length = is.read(b)) != -1) {
                 os.write(b, 0, length);
    }
   
    is.close();
    os.close();
  
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
//     String selectedFile = imageChooser.getSelectedItem().toString();
   
//        try {
//           saveImage("http://127.0.0.1:81/pic/"+selectedFile.trim());
//        } catch (IOException ex) {
//            Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
//       }
//        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String str = (String)this.jComboBox1.getSelectedItem();
        this.jTextField4.setText(str);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:    

        
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
          sendData_POST();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void BrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BrowseActionPerformed
        // TODO add your handling code here:
        if(Authorization.contains("Authorized user")){
            dataStr="";
              imageChooser.removeAllItems();
        
        JFileChooser chooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter(
                "JPG & GIF Images", "jpg", "gif","PNG");
        chooser.setFileFilter(filter);
            int returnVal = chooser.showOpenDialog(null);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
           
        }
         
        OutputStream os;
        InputStream is;
       File f =  new File(chooser.getSelectedFile().getAbsolutePath());
        FileInputStream fileInputStreamReader = null;
            try {
                fileInputStreamReader = new FileInputStream(f);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            byte[] bytes = new byte[(int)f.length()];
            try {
                
                fileInputStreamReader.read(bytes);
                String image = Base64.getEncoder().encodeToString(bytes);
                
                 addParameter("image", image);
                 
                 
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
       String imageName=chooser.getSelectedFile().getName().trim();
       System.out.println(imageName);
    addParameter("imageName",imageName);
    System.out.println(f.getAbsolutePath());
        String urlStr =jTextField4.getText();
            try {
            URL myURL = new URL(urlStr);
            URLConnection myConn = myURL.openConnection();
            myConn.setDoOutput(true);
            myConn.setDoInput(true);
            myConn.setRequestProperty("Content-Type", contentStr);
            myConn.setUseCaches(false);
            //dataStr = "T1=67&T2=88";
            
            BufferedOutputStream out = new BufferedOutputStream(myConn.getOutputStream());
            out.write(dataStr.getBytes());//"ACTION=add&NUMPTS=2&DATA=L0001\nL0002");
            out.close();
            String mm = "";
            int b = -1;

            String t = "";
            is = myConn.getInputStream();
            while ((b = is.read()) != -1) {
                if ((char) b == '\r') {
                    mm += "\n";
                } else {
                    mm = mm + (char) b;
                };
            }
//           this.jTextArea1.setText(mm);
         
          imageChooser.addItem("select Image");

            String[] List =mm.split("\n");
            for(String names:List){
                if(names.contains(".")){
                 names =names.replace("./pic/", " ");
                imageChooser.addItem(names);
                }
            }
         


        
        }   catch (MalformedURLException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        else{
            JFrame f = new JFrame();
            JOptionPane.showMessageDialog(f,"You are not authorized please login");
        }
        
    }//GEN-LAST:event_BrowseActionPerformed

    private void imageChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imageChooserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imageChooserActionPerformed
  
    String dataStr = "";
   // String urlStr = "http://127.0.0.1:8080/my-site/jav.php";
    //String urlStr="http://localhost:8084/servlets-examples/servlet/RequestParamExample";
    String contentStr = "application/x-www-form-urlencoded";

    public void addParameter(String ps, String vs) {
        if (ps == null || vs == null || ps.length() == 0 || vs.length() == 0) {
            return;
        }
        if (dataStr.length() > 0) {
            dataStr += "&";
        }
        try {
            dataStr += ps + "=" + URLEncoder.encode(vs, "ASCII");
        } catch (Exception e) {
            System.out.println(e.toString());
        }
    }

    void sendData_POST() {
        dataStr = "";
        OutputStream os;
        InputStream is;
        String userName = this.jTextField1.getText();
        String password = this.jTextField2.getText();
        addParameter("userName", userName);
        addParameter("password", password);
        String urlStr = this.jTextField4.getText();
        try {
            URL myURL = new URL(urlStr);
            URLConnection myConn = myURL.openConnection();
            myConn.setDoOutput(true);
            myConn.setDoInput(true);
            myConn.setRequestProperty("Content-Type", contentStr);
            myConn.setUseCaches(false);
            //dataStr = "T1=67&T2=88";
            
            BufferedOutputStream out = new BufferedOutputStream(myConn.getOutputStream());
            out.write(dataStr.getBytes());//"ACTION=add&NUMPTS=2&DATA=L0001\nL0002");
            out.close();

            //out.close();
            
            String SS = "";
            int b = -1;

            String t = "";
            is = myConn.getInputStream();
            while ((b = is.read()) != -1) {
                if ((char) b == '\r') {
                    SS += "\n";
                } else {
                    SS = SS + (char) b;
                };
            }
            // this.jTextField1.setText(SS);
            Authorization=SS;
            if(SS.contains("Authorized user")){
                this.jTextArea1.setText("Authoried user");
            }
            else{
            this.jTextArea1.setText("Access Denied");
            }
            
            
            String[] List =SS.split("\n");
            
            for(String names:List){
                if(names.contains(".")){
                 names =names.replace("./pic/", " ");
                imageChooser.addItem(names);
                }
            }
        } catch (Exception e) {
            System.out.println(e.toString());
            this.jTextField1.setText("Faild: exception");
        }

    }
    int kkk =1;
    void sendData_GET() {
        DataInputStream dis;
        String T1 = this.jTextField1.getText();
        String T2 = this.jTextField2.getText();
        try {
            // String str = "http://127.0.0.1:8080/my-site/jav.php?T1="+T1+"&T2="+T2;
            //String str = "http://localhost:8084/servlets-examples/servlet/RequestParamExample?T1="+T1+"&T2="+T2;
            // String str = "http://localhost:8084/hello/index.jsp?T1="+T1+"&T2="+T2;
            // String str = "http://localhost:8084/hello/response3.jsp?T1="+T1+"&name=test1"+kkk++;
            //String str = "http://localhost:8084/hello/response4.jsp?T1="+T1+"&T2="+T2;
            // String str = "http://localhost:8084/hello/responseServlet?T1="+T1+"&T2="+T2;
            String str = this.jTextField4.getText() + "?T1=" + T1 + "&T2=" + T2;;
            URL u = new URL(str);

            dis = new DataInputStream(u.openConnection().getInputStream());
            /*    String s, SS="";
            while ((s = dis.readLine())!= null){
             SS =SS+ s +"\n";
            }
             
           this.jTextArea1.setText(SS);
             */
            int b;
            String t = "";
            String SS = "";

            URLConnection myConn = u.openConnection();
            InputStream is = myConn.getInputStream();
            while ((b = is.read()) != -1) {
                if ((char) b == '\r') {
                    SS += "\n";
                } else {
                    SS = SS + (char) b;
                };

            }

            this.jTextArea1.setText(SS);
            //  this.jTextArea1.setText(trim(SS));

        } catch (Exception e) {
            System.out.println(e.toString());
            this.jTextArea1.setText("Faild: exception");
        }

    }
    public  void saveImage(String imageUrl) throws IOException {
	System.out.println(imageUrl);
        
       
       
        try {
              URL url = new URL(imageUrl);
    InputStream is = url.openStream();
    OutputStream os = null ;

    byte[] b = new byte[2048];
    int length;

   
          
         JFileChooser choose = new JFileChooser();
choose.setCurrentDirectory(new java.io.File("."));
choose.setDialogTitle("select folder");
choose.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
choose.setAcceptAllFileFilterUsed(false);
    int returnVal = choose.showOpenDialog(null);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            os= new FileOutputStream(choose.getSelectedFile().getAbsolutePath()+"/"+imageChooser.getSelectedItem().toString().trim());

        }
         
          while ((length = is.read(b)) != -1) {
      os.write(b, 0, length);
    }

    is.close();
    os.close();
  

            
            System.out.println("Write was successful!");
        } catch (IOException e) {
            e.printStackTrace();
            System.out.println("An error occured!");
        }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Browse;
    private javax.swing.JComboBox<String> imageChooser;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JPasswordField jTextField2;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
